    Arbiter Arbiter_inst (
        .clk(clk), .rst(rst),
      //Master 0
        .I0_ID(),
        .I0_Addr(),
        .I0_Len(),
        .I0_Size(),
        .I0_Burst(),
        .I0_Valid(),
        .IB0_Ready(),
      //Master 1
        .I1_ID(),
        .I1_Addr(),
        .I1_Len(),
        .I1_Size(),
        .I1_Burst(),
        .I1_Valid(),   
        .IB1_Ready(),
      //output info --> to all slave
        .O_IDS  (O_IDS),
        .O_Addr (O_Addr),
        .O_Len  (O_Len),
        .O_Size (O_Size),
        .O_Burst(O_Burst),
      //output handshake
        .O_Valid(Arib_Dec_Valid),
        .OB_Ready(Dec_Arib_Ready)
    );

     Decoder Decoder_inst (
        .clk(clk), .rst(rst),
      //from Arbiter    
        .I_Addr     (),
        .I_Valid    (),
        .IB_Ready   (),
      //Slave 0 --> IM 
        .O0_Valid   (),
        .OB0_Ready  (),
      //Slave 1 --> DM
        .O1_Valid   (),
        .OB1_Ready  (),     
      //Slave 1 --> DM
        .ODefault_Valid   (),
        .OBDefault_Ready  ()   
    );

    Master_wrapper Master_wrapper_IM_inst(
        .clk(clk), .rst(rst),
        .Memory_WEB(), 
        .Memory_BWEB(),
        .Memory_Addr(),
        .Memory_Din(),
        .Memory_Dout(),

        .M_AWID(),  
        .M_AWAddr(),
        .M_AWLen(), 
        .M_AWSize(),
        .M_AWBurst(),
        .M_AWValid(),
        .M_AWReady(),
        .M_WData(), 
        .M_WStrb(), 
        .M_WLast(), 
        .M_WValid(),
        .M_WReady(),
        .M_ARID(),  
        .M_ARAddr(),
        .M_ARLen(), 
        .M_ARSize(),
        .M_ARBurst(),
        .M_ARValid(),
        .M_ARReady(),
        .M_RID(),   
        .M_RData(), 
        .M_RStrb(), 
        .M_RLast(), 
        .M_RValid(),
        .M_RReady()

    );
   
	Raddr	Raddr_inst(
	  //M0
		.M0_ARID(),   
		.M0_ARAddr(), 
		.M0_ARLen(),  
		.M0_ARSize(), 
		.M0_ARBurst(),
		.M0_ARValid(),
		.M0_ARReady(),
	  //M1
		.M1_ARID(),   
		.M1_ARAddr(), 
		.M1_ARLen(),  
		.M1_ARSize(), 
		.M1_ARBurst(),
		.M1_ARValid(),
		.M1_ARReady(),
	  //S0
		.S0_ARID(),   
		.S0_ARAddr(), 
		.S0_ARLen(),  
		.S0_ARSize(), 
		.S0_ARBurst(),
		.S0_ARValid(),
		.S0_ARReady(),
	  //S1
		.S1_ARID(),   
		.S1_ARAddr(), 
		.S1_ARLen(),  
		.S1_ARSize(), 
		.S1_ARBurst(),
		.S1_ARValid(),
		.S1_ARReady(),
	  //DS
		.DS_ARID(),   
		.DS_ARAddr(), 
		.DS_ARLen(),  
		.DS_ARSize(), 
		.DS_ARBurst(),
		.DS_ARValid(),
		.DS_ARReady()
	);

	Rdata	Rdata_inst(
	  //M0
		.M0_RID(),  
		.M0_RData(),
		.M0_RStrb(),
		.M0_RLast(),
		.M0_RValid(),
		.M0_RReady(),
	  //M1
		.M1_RID(),  
		.M1_RData(),
		.M1_RStrb(),
		.M1_RLast(),
		.M1_RValid(),
		.M1_RReady(),
	  //S0
		.S0_RID(),  
		.S0_RData(),
		.S0_RStrb(),
		.S0_RLast(),
		.S0_RValid(),
		.S0_RReady(),
	  //S1		
		.S1_RID(),  
		.S1_RData(),
		.S1_RStrb(),
		.S1_RLast(),
		.S1_RValid(),
		.S1_RReady(),
	  //DS		
		.DS_RID(),  
		.DS_RData(),
		.DS_RStrb(),
		.DS_RLast(),
		.DS_RValid(),
		.DS_RReady()
	);

	Waddr	Waddr_inst(
	  //M0
	  //M1
		.M1_AWID(),   
		.M1_AWAddr(), 
		.M1_AWLen(),  
		.M1_AWSize(), 
		.M1_AWBurst(),
		.M1_AWValid(),
		.M1_AWReady(),
	  //S0
		.S0_AWID(),   
		.S0_AWAddr(), 
		.S0_AWLen(),  
		.S0_AWSize(), 
		.S0_AWBurst(),
		.S0_AWValid(),
		.S0_AWReady(),
	  //S1
		.S1_AWID(),   
		.S1_AWAddr(), 
		.S1_AWLen(),  
		.S1_AWSize(), 
		.S1_AWBurst(),
		.S1_AWValid(),
		.S1_AWReady(),
	  //DS
		.DS_AWID(),   
		.DS_AWAddr(), 
		.DS_AWLen(),  
		.DS_AWSize(), 
		.DS_AWBurst(),
		.DS_AWValid(),
		.DS_AWReady() 
	);
